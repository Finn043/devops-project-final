name: CI/CD Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies and test
        run: npm ci && npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: docker.io/tinluong043/devops-demo:staging

  deploy:
    needs: build # This ensures the deploy job only runs if the build is successful
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest image from Docker Hub
            docker pull tinluong043/devops-demo:staging
            
            # Stop and remove the old container
            docker stop app || true
            docker rm app || true
            
            # Run the new container
            docker run -d --name app -p 80:3000 --restart=always \
              -e APP_VERSION="3.0-automated" \
              tinluong043/devops-demo:staging
            
            # Clean up old, unused images
            docker image prune -f